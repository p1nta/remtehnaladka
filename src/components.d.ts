/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  MatchResults,
} from '@stencil/router';
import {
  IFilters,
} from './components/tab-slider/tab-slider';
import {
  IFilters as IFilters1,
  ISlideFilter,
} from './components/tab-slider/tab-slider';

export namespace Components {
  interface LangMethod {
    'getCaseText': () => Promise<(key: string) => any>;
    'getText': () => Promise<(key: string) => any>;
  }
  interface RemtehBottom {}
  interface RemtehCase {
    'case': string;
  }
  interface RemtehContacts {}
  interface RemtehHeader {
    'mode': 'Home' | 'Projects' | 'Case';
  }
  interface RemtehHome {}
  interface RemtehProjects {
    'match': MatchResults;
  }
  interface RemtehRoot {}
  interface RemtehSelect {
    'onSelect': (value: IFilters) => void;
    'options': IFilters[];
    'selectedOption': IFilters;
  }
  interface RemtehTop {}
  interface TabBar {
    'onChangeTab': (value: IFilters) => void;
    'selectedTab': IFilters;
    'tabs': IFilters[];
  }
  interface TabSlider {
    'slides': ISlideFilter;
    'tabs': IFilters[];
  }
}

declare global {


  interface HTMLLangMethodElement extends Components.LangMethod, HTMLStencilElement {}
  const HTMLLangMethodElement: {
    prototype: HTMLLangMethodElement;
    new (): HTMLLangMethodElement;
  };

  interface HTMLRemtehBottomElement extends Components.RemtehBottom, HTMLStencilElement {}
  const HTMLRemtehBottomElement: {
    prototype: HTMLRemtehBottomElement;
    new (): HTMLRemtehBottomElement;
  };

  interface HTMLRemtehCaseElement extends Components.RemtehCase, HTMLStencilElement {}
  const HTMLRemtehCaseElement: {
    prototype: HTMLRemtehCaseElement;
    new (): HTMLRemtehCaseElement;
  };

  interface HTMLRemtehContactsElement extends Components.RemtehContacts, HTMLStencilElement {}
  const HTMLRemtehContactsElement: {
    prototype: HTMLRemtehContactsElement;
    new (): HTMLRemtehContactsElement;
  };

  interface HTMLRemtehHeaderElement extends Components.RemtehHeader, HTMLStencilElement {}
  const HTMLRemtehHeaderElement: {
    prototype: HTMLRemtehHeaderElement;
    new (): HTMLRemtehHeaderElement;
  };

  interface HTMLRemtehHomeElement extends Components.RemtehHome, HTMLStencilElement {}
  const HTMLRemtehHomeElement: {
    prototype: HTMLRemtehHomeElement;
    new (): HTMLRemtehHomeElement;
  };

  interface HTMLRemtehProjectsElement extends Components.RemtehProjects, HTMLStencilElement {}
  const HTMLRemtehProjectsElement: {
    prototype: HTMLRemtehProjectsElement;
    new (): HTMLRemtehProjectsElement;
  };

  interface HTMLRemtehRootElement extends Components.RemtehRoot, HTMLStencilElement {}
  const HTMLRemtehRootElement: {
    prototype: HTMLRemtehRootElement;
    new (): HTMLRemtehRootElement;
  };

  interface HTMLRemtehSelectElement extends Components.RemtehSelect, HTMLStencilElement {}
  const HTMLRemtehSelectElement: {
    prototype: HTMLRemtehSelectElement;
    new (): HTMLRemtehSelectElement;
  };

  interface HTMLRemtehTopElement extends Components.RemtehTop, HTMLStencilElement {}
  const HTMLRemtehTopElement: {
    prototype: HTMLRemtehTopElement;
    new (): HTMLRemtehTopElement;
  };

  interface HTMLTabBarElement extends Components.TabBar, HTMLStencilElement {}
  const HTMLTabBarElement: {
    prototype: HTMLTabBarElement;
    new (): HTMLTabBarElement;
  };

  interface HTMLTabSliderElement extends Components.TabSlider, HTMLStencilElement {}
  const HTMLTabSliderElement: {
    prototype: HTMLTabSliderElement;
    new (): HTMLTabSliderElement;
  };
  interface HTMLElementTagNameMap {
    'lang-method': HTMLLangMethodElement;
    'remteh-bottom': HTMLRemtehBottomElement;
    'remteh-case': HTMLRemtehCaseElement;
    'remteh-contacts': HTMLRemtehContactsElement;
    'remteh-header': HTMLRemtehHeaderElement;
    'remteh-home': HTMLRemtehHomeElement;
    'remteh-projects': HTMLRemtehProjectsElement;
    'remteh-root': HTMLRemtehRootElement;
    'remteh-select': HTMLRemtehSelectElement;
    'remteh-top': HTMLRemtehTopElement;
    'tab-bar': HTMLTabBarElement;
    'tab-slider': HTMLTabSliderElement;
  }
}

declare namespace LocalJSX {
  interface LangMethod {}
  interface RemtehBottom {}
  interface RemtehCase {
    'case'?: string;
  }
  interface RemtehContacts {}
  interface RemtehHeader {
    'mode'?: 'Home' | 'Projects' | 'Case';
  }
  interface RemtehHome {}
  interface RemtehProjects {
    'match'?: MatchResults;
  }
  interface RemtehRoot {}
  interface RemtehSelect {
    'onSelect'?: (value: IFilters) => void;
    'options'?: IFilters[];
    'selectedOption'?: IFilters;
  }
  interface RemtehTop {}
  interface TabBar {
    'onChangeTab'?: (value: IFilters) => void;
    'selectedTab'?: IFilters;
    'tabs'?: IFilters[];
  }
  interface TabSlider {
    'slides'?: ISlideFilter;
    'tabs'?: IFilters[];
  }

  interface IntrinsicElements {
    'lang-method': LangMethod;
    'remteh-bottom': RemtehBottom;
    'remteh-case': RemtehCase;
    'remteh-contacts': RemtehContacts;
    'remteh-header': RemtehHeader;
    'remteh-home': RemtehHome;
    'remteh-projects': RemtehProjects;
    'remteh-root': RemtehRoot;
    'remteh-select': RemtehSelect;
    'remteh-top': RemtehTop;
    'tab-bar': TabBar;
    'tab-slider': TabSlider;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'lang-method': LocalJSX.LangMethod & JSXBase.HTMLAttributes<HTMLLangMethodElement>;
      'remteh-bottom': LocalJSX.RemtehBottom & JSXBase.HTMLAttributes<HTMLRemtehBottomElement>;
      'remteh-case': LocalJSX.RemtehCase & JSXBase.HTMLAttributes<HTMLRemtehCaseElement>;
      'remteh-contacts': LocalJSX.RemtehContacts & JSXBase.HTMLAttributes<HTMLRemtehContactsElement>;
      'remteh-header': LocalJSX.RemtehHeader & JSXBase.HTMLAttributes<HTMLRemtehHeaderElement>;
      'remteh-home': LocalJSX.RemtehHome & JSXBase.HTMLAttributes<HTMLRemtehHomeElement>;
      'remteh-projects': LocalJSX.RemtehProjects & JSXBase.HTMLAttributes<HTMLRemtehProjectsElement>;
      'remteh-root': LocalJSX.RemtehRoot & JSXBase.HTMLAttributes<HTMLRemtehRootElement>;
      'remteh-select': LocalJSX.RemtehSelect & JSXBase.HTMLAttributes<HTMLRemtehSelectElement>;
      'remteh-top': LocalJSX.RemtehTop & JSXBase.HTMLAttributes<HTMLRemtehTopElement>;
      'tab-bar': LocalJSX.TabBar & JSXBase.HTMLAttributes<HTMLTabBarElement>;
      'tab-slider': LocalJSX.TabSlider & JSXBase.HTMLAttributes<HTMLTabSliderElement>;
    }
  }
}


